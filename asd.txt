Give the input field the attributes type="file" and accept=".txt", and that should work

<input type="file" accept=".txt" />
And you can read this .txt file using node.js(Also you can read it with vanilla js), But i prefer node.js like this

const fs = require('fs');
const fileData = fs.readFileSync('fileName.txt', 'utf-8');
console.log(fileData) // Whatever inside .txt file
Update according to comment:

Suppose in your project folder, you have one index.html file and one index.js file. Create two .txt file named as file1.txt and file2.txt And write something on those file. NOTE: For simplicity i am writing solution using jQuery.

index.html

<body>
    <p id="text-field"></p>
    <button id="btn1">Button 1</button>
    <button id="btn2">Button 2</button>
</body>
index.js

const fs = require('fs');
let fileData = '';

$('#btn1').click(()=> {
    fileData = fs.readFileSync('file1.txt', 'utf-8');
    $('#text-field').append(fileData);
});

$('#btn2').click(()=> {
    fileData = fs.readFileSync('file2.txt', 'utf-8');
    $('#text-field').append(fileData);
});
That's it. According to button click text will be append into p element.

You can handle two button click with one function also, like this

$('button').click(event => {
    event.stopImmediatePropagation();
    event.stopPropagation();

    if($(event.target).attr('id') === 'btn1') {
        fileData = fs.readFileSync('file1.txt', 'utf-8');
        $('#text-field').append(fileData);
    }else if($(event.target).attr('id') === 'btn2') {
        fileData = fs.readFileSync('file2.txt', 'utf-8');
        $('#text-field').append(fileData);
    }
});
Share
